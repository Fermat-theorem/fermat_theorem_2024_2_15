单调栈最根本需要领悟的一点就是，很多奇奇怪怪的场景，已经在创建单调栈本身时，被处理了。

回忆下一个最大的元素，该题原数组会出现驼峰情况：,,9,8,,,10,,,7,6,,,的情况，但是在处理到10的时候，8和9的第一个大于值就已经更新为10了，并且pop了8和9。
这样index_list里面存的就是,,,10,,,7,6,,,这样直到出现比11大的，就会继续上述步骤，否则，就都是单调递减的了。

回忆绝对差不超过限制的最长连续子数组，也是在过程中就处理了[left,right+1]之前的值，因为left之前的值，不可能比left索引最终定位的min小。前面的值都在min和max之间，
那么单调栈在建立的过程中，就一定会把他们pop出去。这个可以参考心脏脉搏图，多想想。

总之，单调栈最需要领悟的，就是其在建立过程中，就已经在处理数据了，不存在“臆想”的特殊情况，出现我们想要的状态，就是最终状态，前面如果出现特殊情况，那么前面的过程就会处理